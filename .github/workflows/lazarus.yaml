name: Lazarus

defaults:
    run:
        shell: bash

permissions:
  contents: write


on:

  push:
    branches: [ lazarus ]
    tags: [ "*" ]
    paths-ignore: [ "README.md", "LICENSE", "CHANGELOG.md", ".github/cliff.toml" ]

  pull_request:
    branches: [ lazarus ]

jobs:

    build:
        runs-on: ${{ matrix.operating-system }}
        strategy:
            fail-fast: false
            matrix:
                operating-system: [ubuntu-latest, windows-latest]
                lazarus-versions: ["stable"]

        steps:
        - name: Checkout source code
          uses: actions/checkout@v4

        - name: Install Lazarus
          uses: gcarreno/setup-lazarus@v3
          with:
            lazarus-version: ${{ matrix.lazarus-versions }}
            with-cache: false

        - name: Build HeidiSQL (Windows)
          if: ${{ matrix.operating-system == 'windows-latest' }}
          run: |
            lazbuild -B --bm=Release "heidisql.lpi"
            mv out/heidisql.exe out/heidisql-fp-win64.exe

        - name: Build HeidiSQL (Ubuntu)
          if: ${{ matrix.operating-system == 'ubuntu-latest' }}
          run: |
            echo Building with GTK2
            lazbuild -B --bm=Release "heidisql.lpi"
            chmod +x out/heidisql
            mv out/heidisql out/heidisql-fp-lin64-gtk
            echo Installing Qt5 Dev
            sudo apt update
            sudo apt install libqt5pas-dev -y
            echo Building with Qt5
            lazbuild -B --bm=Release --ws=qt5 "heidisql.lpi"
            chmod +x out/heidisql
            mv out/heidisql out/heidisql-fp-lin64-qt

        - name: Upload binaries
          if: ${{ matrix.lazarus-versions == 'stable' }}
          uses: actions/upload-artifact@v4
          with:
            name: ${{ matrix.operating-system }}
            path: out/heidisql-*

    release:
        if: contains(github.ref_type, 'tag')

        name: Create GitHub Release
        runs-on: [ubuntu-latest]
        needs: [build]

        steps:
            - name: Checkout source code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Set env
              run: echo "tag=${{ github.ref_name }}" >> "$GITHUB_ENV"

            - name: Download Ubuntu
              uses: actions/download-artifact@v4
              with:
                name: ubuntu-latest
                path: ubuntu-latest

            - name: Download WIndows
              uses: actions/download-artifact@v4
              with:
                name: windows-latest
                path: windows-latest

            - name: List files
              run: ls -alF *-latest


            - name: Create folders
              run: mkdir -p windows linux-gtk linux-qt

            - name: Move binaries
              run: |
                mv windows-latest/heidisql-fp-win64.exe windows/heidisql.exe
                mv  ubuntu-latest/heidisql-fp-lin64-gtk linux-gtk/heidisql
                mv  ubuntu-latest/heidisql-fp-lin64-qt  linux-qt/heidisql

            - name: Create release archives (Windows)
              run: |
                cd windows
                cp -r ../out/locale ../out/*.ini ../out/*.dll .
                zip -r ../heidisql-fp-win64-${{ env.tag }}.zip *

            - name: Create release archives (Linux GTK)
              run: |
                cd linux-gtk
                cp -r ../out/locale ../out/*.ini .
                tar -zcvf ../heidisql-fp-lin64-gtk-${{ env.tag }}.tgz *

            - name: Create release archives (Linux QT)
              run: |
                cd linux-qt
                cp -r ../out/locale ../out/*.ini .
                tar -zcvf ../heidisql-fp-lin64-qt-${{ env.tag }}.tgz *

            - name: Generate Release Notes
              id: git-cliff
              uses: orhun/git-cliff-action@main
              with:
                config: .github/cliff.toml
                args: --latest --strip header

            - name: Create GitHub release
              uses: softprops/action-gh-release@v2
              with:
                name: HeidiSQL Linux ${{ env.tag }}
                body: ${{ steps.git-cliff.outputs.content }}
                files: |
                  *.zip
                  *.tgz
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}